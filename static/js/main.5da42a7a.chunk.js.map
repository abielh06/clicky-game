{"version":3,"sources":["components/Card/index.js","components/Wrapper/index.js","components/Title/index.js","components/Score/index.js","App.js","index.js"],"names":["Card","props","className","alt","name","src","image","onClick","handleFormSubmit","id","Wrapper","children","Title","Score","App","state","friends","score","highscore","console","log","newFriends","map","friend","clicked","alert","setState","sort","Math","random","this","key","Component","ReactDOM","render","document","getElementById"],"mappings":"goEAuBeA,MApBf,SAAcC,GACZ,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,SAEnC,yBAAKJ,UAAU,WACb,4BACE,4BACE,yCADF,IAC0BD,EAAMG,QAIpC,0BAAMG,QAAS,kBAAMN,EAAMO,iBAAiBP,EAAMQ,KAAKP,UAAU,UAAjE,gB,MCNSQ,MAPf,SAAiBT,GAEb,OAAO,yBAAKC,UAAU,WACjBD,EAAMU,W,MCIAC,MAPf,SAAeX,GACb,OAAQ,6BACN,yBAAKC,UAAU,SAASD,EAAMU,Y,aCOnBE,MATf,SAAeZ,GACb,OAAQ,6BAEN,yBAAKC,UAAU,UAAUD,EAAMU,YC0EpBG,E,2MArEbC,MAAQ,CACNC,UACAC,MAAO,EACPC,UAAW,G,EAgBbV,iBAAoB,SAACC,GACnBU,QAAQC,IAAIX,GAEV,IAAIY,EAAa,EAAKN,MAAMC,QAAQM,KAAI,SAAAC,GAgBtC,OAfIA,EAAOd,KAAOA,KACO,IAAnBc,EAAOC,SAETC,MAAM,aACN,EAAKC,SAAS,CAAET,MAAO,MAEvBM,EAAOC,SAAU,EACjB,EAAKE,SAAS,CAACT,MAAO,EAAKF,MAAME,MAAQ,IAEtC,EAAKF,MAAME,OAAS,EAAKF,MAAMG,WAChC,EAAKQ,SAAS,CAACR,UAAW,EAAKH,MAAMG,UAAW,MAK/CK,KAGTF,EAAWM,MAAK,kBAAMC,KAAKC,SAAW,MACtC,EAAKH,SAAS,CAAEV,QAASK,K,mFAnC7B,IAAIA,EAAcS,KAAKf,MAAMC,QAAQM,KAAI,SAAAC,GAErC,OADAA,EAAOC,SAAU,EACVD,KAITO,KAAKJ,SAAS,CAACV,QAASK,IAExBF,QAAQC,IAAIU,KAAKf,MAAMC,W,+BA8Bf,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,mBACE,uBAAGd,UAAU,KAAb,qBAEJ,kBAAC,EAAD,eAAe4B,KAAKf,MAAME,MAA1B,eAA6Ca,KAAKf,MAAMG,WACxD,6BACGY,KAAKf,MAAMC,QAAQM,KAAI,SAAAC,GAAM,OAC5B,kBAAC,EAAD,CACAf,iBAAkB,EAAKA,iBACrBC,GAAIc,EAAOd,GACXsB,IAAKR,EAAOd,GACZL,KAAMmB,EAAOnB,KACbE,MAAOiB,EAAOjB,MACdU,QAAS,EAAKD,MAAMC,QACpBC,MAAO,EAAKF,MAAME,gB,GAhEZe,aCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5da42a7a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n        </ul>\n      </div>\n      <span onClick={() => props.handleFormSubmit(props.id)} className=\"update\">\n        CLICK HERE\n      </span>\n    </div>\n  );\n}\n\nexport default Card;\n\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n     \n    return <div className=\"wrapper\">\n        {props.children}\n    </div>;\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (<div>\n    <div className=\"title\">{props.children}</div>\n    \n  </div>);\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Score(props) {\n  return (<div>\n  \n    <div className=\"scores\">{props.children}\n      \n    </div>\n  </div>);\n}\n\nexport default Score;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport Score from \"./components/Score\";\n\nclass App extends Component {\n\n  // set states that will change\n  state = {\n    friends,\n    score: 0,\n    highscore: 0\n  };\n  componentDidMount() {\n    // \n  let newFriends  = this.state.friends.map(friend => {\n      friend.clicked = false;\n      return friend\n    })\n\n\n    this.setState({friends: newFriends})\n\n    console.log(this.state.friends);\n    \n  };\n\n  handleFormSubmit =  (id) => {\n    console.log(id)\n    \n      let newFriends = this.state.friends.map(friend => {\n        if (friend.id === id) {\n          if (friend.clicked === true) {\n            // when image is clicked twice set the score to 0\n            alert(\"game over\")\n            this.setState({ score: 0 })\n          } else {\n            friend.clicked = true;\n            this.setState({score: this.state.score + 1})\n  \n            if(this.state.score >= this.state.highscore){\n              this.setState({highscore: this.state.highscore +1})\n            }\n          }\n        }\n  \n        return friend;\n      })\n  \n      newFriends.sort(() => Math.random() - 0.5);\n      this.setState({ friends: newFriends })\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Title >Clicky Game\n          <p className=\"p\">Test your memory</p>\n        </Title>\n      <Score>Score: {this.state.score} Highscore: {this.state.highscore}</Score>\n      <br></br>\n        {this.state.friends.map(friend => (\n          <Card\n          handleFormSubmit={this.handleFormSubmit}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            friends={this.state.friends}\n            score={this.state.score}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}